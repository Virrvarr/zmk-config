/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>
#include "keys_sv.h"

&mmv_input_listener {
        warp {
                layers = <4>; 
                input-processors = <&zip_xy_scaler 3 1>;
        };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  B  |  L  |  D  |  W  |  Z  |   |  '  |  F  |  O  |  U  |  J  |  ENT |
// | TAB |  N  |  R  |  T  |  S  |  G  |   |  Y  |  H  |  A  |  E  |  I  | BSPC |
// | WIN |  Q  |  X  |  M  |  C  |  V  |   |  K  |  P  |  ,  |  .  |  /  | ALT  |
//                  | CTRL | num | SPC |   | SHIFT | REP | MED |
                        bindings = <
   &kp ESC  &kp SV_B &kp SV_L &kp SV_D &kp SV_W &kp SV_Z   &kp SV_SQT  &kp SV_F  &kp SV_O     &kp SV_U   &kp SV_J    &kp RET
   &kp TAB  &kp SV_N &kp SV_R &kp SV_T &kp SV_S &kp SV_G   &kp SV_Y    &kp SV_H  &kp SV_A     &kp SV_E   &kp SV_I    &kp BSPC
   &kp LGUI &kp SV_Q &kp SV_X &kp SV_M &kp SV_C &kp SV_V   &kp SV_K    &kp SV_P  &kp SV_COMMA &kp SV_DOT &kp SV_FSLH &kp LALT
                &kp LCTRL &mo 1 &kp SV_SPACE   &kp RSHIFT &key_repeat &mo 2
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  §  |  `  |  (  |  $  |  )  |  +  |   |  ´  |  {  |  @  |  }  |  |  |  Å  |
// |     | 1/! | 2/" | 3/# |  4  | 5/% |   | 6/& |  7  |  8  |  9  | 0/= |  Ä  |
// |     |  -  |  <  |  ^  |  >  |  *  |   |  ~  |  [  |  _  |  ]  |  \  |  Ö  |
//                   |     | XXX |     |   | SHIFT |     | nav |
                        bindings = <
   &kp SV_SECT  &kp SV_GRAVE  &kp SV_LPAR  &kp SV_DLLR   &kp SV_RPAR  &kp SV_PLUS     &kp SV_ACUTE  &kp SV_LBRC   &kp SV_AT     &kp SV_RBRC   &kp SV_PIPE  &kp SV_A_RING
   &none        &kp SV_N1     &kp SV_N2    &kp SV_N3     &kp SV_N4    &kp SV_N5       &kp SV_N6     &kp SV_N7     &kp SV_N8     &kp SV_N9     &kp SV_N0    &kp SV_A_UMLAUT
   &none        &kp SV_MINUS  &kp SV_LT    &kp SV_CARET  &kp SV_GT    &kp SV_STAR     &kp SV_TILDE  &kp SV_LBKT   &kp SV_UNDER  &kp SV_RBKT   &kp SV_BSLH  &kp SV_O_UMLAUT
                                           &none         &trans       &none           &kp RSHIFT    &none         &to 3
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// |  bt  |  F1 |  F2 |  F3 |  F4 |     |   |     |  V- | Mut |  V+ |     |      |
// |      |  F5 |  F6 |  F7 |  F8 |     |   |     |  h  |  j  |  k  |  l  |      |
// |      |  F9 | F10 | F11 | F12 |     |   |     | Pre | PP  | Nex |     |      |
//                    |     |     |     |   |     |     | XXX |
                        bindings = <
   &to 5 &kp F1  &kp F2  &kp F3  &kp F4  &none    &none  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &none     &none
   &none &kp F5  &kp F6  &kp F7  &kp F8  &none    &none  &kp SV_H      &kp SV_J    &kp SV_K      &kp SV_L  &none
   &none &kp F9  &kp F10 &kp F11 &kp F12 &none    &none  &kp C_PREV    &kp C_PP    &kp C_NEXT    &none     &none
                         &none   &none   &none    &none  &none         &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |      |     | Home | A^  | End |     |   | SHFT | ALT | STAB | TAB | CTRL |      |
// |      |     |  <A  | Av  | A>  | x3  |   | WIN  | <M  |  Mv  |  M^ |  M>  |      |
// |      | CZ  |  CX  | CC  | CV  |     |   |      | <S  |  Sv  |  S^ |  S>  |      |
//                    | MB4 | WIN | LCLK |   | RCLK | MB5 | L0 |
                        bindings = <
   &none  &none         &kp HOME       &kp UP         &kp END        &none        &kp LSHFT   &kp LALT        &kp LS(TAB)     &kp TAB        &kp LCTRL        &none
   &none  &none         &kp LEFT       &kp DOWN       &kp RIGHT      &mo 4        &kp LGUI    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &none
   &none  &kp LC(SV_Z)  &kp LC(SV_X)   &kp LC(SV_C)   &kp LC(SV_V)   &none        &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &none
                                       &mkp MB4       &mkp MCLK      &mkp LCLK    &mkp RCLK   &mkp MB5        &to 0
                        >;
                };

                nav_layer2 {
// -----------------------------------------------------------------------------------------
// |      |     | Home | A^  | End |     |   | SHFT | ALT | STAB | TAB | CTRL |      |
// |      |     |  <A  | Av  | A>  | XXX |   | WIN  | <M  |  Mv  |  M^ |  M>  |      |
// |      | CZ  |  CX  | CC  | CV  |     |   |      | <S  |  Sv  |  S^ |  S>  |      |
//                    | MB4 | WIN | LCLK |   | RCLK | MB5 | L0 |
                        bindings = <
   &none  &none         &kp HOME       &kp UP         &kp END        &none        &kp LSHFT   &kp LALT        &kp LS(TAB)     &kp TAB        &kp LCTRL        &none
   &none  &none         &kp LEFT       &kp DOWN       &kp RIGHT      &none        &kp LGUI    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &none
   &none  &kp LC(SV_Z)  &kp LC(SV_X)   &kp LC(SV_C)   &kp LC(SV_V)   &none        &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &none
                                       &mkp MB4       &mkp MCLK      &mkp LCLK    &mkp RCLK   &mkp MB5        &to 0
                        >;
                };

                bt_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |      |      |
// |      | BT1 | BT2 | BT3 | BT4 |     |   |     |     |     |     |      |      |
// |      | DC1 | DC2 | DC3 | DC4 |     |   |     |     | CLR |     | CLRA |      |
//                    |     |     |     |   |     |     | L0  |
                        bindings = <
   &none &none           &none          &none          &none            &none     &none  &none  &none        &none   &none            &none
   &none &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3     &none     &none  &none  &none        &none   &none            &none
   &none &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3    &none     &none  &none  &bt BT_CLR   &none   &bt BT_CLR_ALL   &none
                                        &none          &none            &none     &none  &none  &to 0
                        >;
                };

                querty {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
        };
};